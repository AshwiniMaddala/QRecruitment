///<reference path="jaydata.d.ts" />

/*//////////////////////////////////////////////////////////////////////////////////////
////// Autogenerated by JaySvcUtil.exe http://JayData.org for more info        /////////
//////                      oData  V4  TypeScript                              /////////
//////////////////////////////////////////////////////////////////////////////////////*/


declare module Quantium.Recruitment.ApiServices.Models {
  export class AdminDto extends $data.Entity {
    constructor();
    constructor(initData: { FirstName?: string; LastName?: string; Email?: string; Mobile?: string; IsActive?: boolean; DepartmentId?: string; Id?: string; });
    FirstName: string;
    LastName: string;
    Email: string;
    Mobile: string;
    IsActive: boolean;
    DepartmentId: string;
    Id: string;
    
  }
  
  export class CandidateDto extends $data.Entity {
    constructor();
    constructor(initData: { FirstName?: string; LastName?: string; Email?: string; Mobile?: string; IsActive?: boolean; JobId?: string; TestId?: string; Id?: string; });
    FirstName: string;
    LastName: string;
    Email: string;
    Mobile: string;
    IsActive: boolean;
    JobId: string;
    TestId: string;
    Id: string;
    
  }
  
  export class CandidateSelectedOptionDto extends $data.Entity {
    constructor();
    constructor(initData: { ChallengeId?: string; OptionId?: string; Id?: string; });
    ChallengeId: string;
    OptionId: string;
    Id: string;
    
  }
  
  export class ChallengeDto extends $data.Entity {
    constructor();
    constructor(initData: { TestId?: string; QuestionId?: string; StartTime?: Date; AnsweredTime?: Date; Id?: string; Question?: Quantium.Recruitment.ApiServices.Models.QuestionDto; CandidateSelectedOptions?: Quantium.Recruitment.ApiServices.Models.CandidateSelectedOptionDto[]; });
    TestId: string;
    QuestionId: string;
    StartTime: Date;
    AnsweredTime: Date;
    Id: string;
    Question: Quantium.Recruitment.ApiServices.Models.QuestionDto;
    CandidateSelectedOptions: Quantium.Recruitment.ApiServices.Models.CandidateSelectedOptionDto[];
    
  }
  
  export class DepartmentDto extends $data.Entity {
    constructor();
    constructor(initData: { Name?: string; Id?: string; Jobs?: Quantium.Recruitment.ApiServices.Models.JobDto[]; Admins?: Quantium.Recruitment.ApiServices.Models.AdminDto[]; });
    Name: string;
    Id: string;
    Jobs: Quantium.Recruitment.ApiServices.Models.JobDto[];
    Admins: Quantium.Recruitment.ApiServices.Models.AdminDto[];
    
  }
  
  export class JobDto extends $data.Entity {
    constructor();
    constructor(initData: { Title?: string; Profile?: string; DepartmentId?: string; Id?: string; Candidates?: Quantium.Recruitment.ApiServices.Models.CandidateDto[]; Labels?: Quantium.Recruitment.ApiServices.Models.LabelDto[]; });
    Title: string;
    Profile: string;
    DepartmentId: string;
    Id: string;
    Candidates: Quantium.Recruitment.ApiServices.Models.CandidateDto[];
    Labels: Quantium.Recruitment.ApiServices.Models.LabelDto[];
    
  }
  
  export class LabelDto extends $data.Entity {
    constructor();
    constructor(initData: { Name?: string; JobId?: string; TestId?: string; Id?: string; });
    Name: string;
    JobId: string;
    TestId: string;
    Id: string;
    
  }
  
  export class OptionDto extends $data.Entity {
    constructor();
    constructor(initData: { QuestionId?: string; Text?: string; Image?: Uint8Array; IsAnswer?: boolean; Id?: string; });
    QuestionId: string;
    Text: string;
    Image: Uint8Array;
    IsAnswer: boolean;
    Id: string;
    
  }
  
  export class QuestionDto extends $data.Entity {
    constructor();
    constructor(initData: { QuestionGroupId?: string; Text?: string; Image?: Uint8Array; TimeInSeconds?: number; Id?: string; QuestionGroup?: Quantium.Recruitment.ApiServices.Models.QuestionGroupDto; Options?: Quantium.Recruitment.ApiServices.Models.OptionDto[]; });
    QuestionGroupId: string;
    Text: string;
    Image: Uint8Array;
    TimeInSeconds: number;
    Id: string;
    QuestionGroup: Quantium.Recruitment.ApiServices.Models.QuestionGroupDto;
    Options: Quantium.Recruitment.ApiServices.Models.OptionDto[];
    
  }
  
  export class QuestionGroupDto extends $data.Entity {
    constructor();
    constructor(initData: { Description?: string; Id?: string; });
    Description: string;
    Id: string;
    
  }
  
  export class TestDto extends $data.Entity {
    constructor();
    constructor(initData: { Name?: string; Id?: string; Labels?: Quantium.Recruitment.ApiServices.Models.LabelDto[]; Challenges?: Quantium.Recruitment.ApiServices.Models.ChallengeDto[]; Candidates?: Quantium.Recruitment.ApiServices.Models.CandidateDto[]; });
    Name: string;
    Id: string;
    Labels: Quantium.Recruitment.ApiServices.Models.LabelDto[];
    Challenges: Quantium.Recruitment.ApiServices.Models.ChallengeDto[];
    Candidates: Quantium.Recruitment.ApiServices.Models.CandidateDto[];
    
  }
  
}

declare module QRecruitment {
  export class QRecruitmentContainer extends $data.EntityContext {
    onReady(): $data.IPromise;
    onReady(handler: (context: QRecruitmentContainer) => void): $data.IPromise;
    
    AdminDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.AdminDto>;
    CandidateDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.CandidateDto>;
    CandidateSelectedOptionDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.CandidateSelectedOptionDto>;
    ChallengeDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.ChallengeDto>;
    DepartmentDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.DepartmentDto>;
    JobDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.JobDto>;
    LabelDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.LabelDto>;
    OptionDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.OptionDto>;
    Questions: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.QuestionDto>;
    QuestionGroupDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.QuestionGroupDto>;
    TestDto: $data.EntitySet<Quantium.Recruitment.ApiServices.Models.TestDto>;
    
  }

}
