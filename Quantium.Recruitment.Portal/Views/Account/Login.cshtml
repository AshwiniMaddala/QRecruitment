@using System.Collections.Generic
@using System.Runtime.InteropServices
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@using Quantium.Recruitment.Portal.Models
@model Quantium.Recruitment.Portal.Models.AccountViewModels.LoginViewModel
@inject SignInManager<ApplicationUser> signInManager

@{
    Layout = null;
}
<html>
<head prefix="og: http://ogp.me/ns#">

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <meta property="og:title" content="Quantium • Recruitment"/>

    <title>Quantium • Recruitment</title>

    <link rel="icon" href="~/img/favicon.png">
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>

    <link rel="stylesheet" type="text/css" href="~/lib/font-awesome/css/font-awesome.css">
    <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Arimo" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap.css"/>
    <link rel="stylesheet" type="text/css" href="~/css/site.css"/>

</head>
<body>
    <div>
    <div>
        <section>
            <h4>Use another service to log in.</h4>
            <hr/>
            @{
                var loginProviders = signInManager.GetExternalAuthenticationSchemes().ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="large-button form-group btn btn-danger" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>
</body>
</html>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
